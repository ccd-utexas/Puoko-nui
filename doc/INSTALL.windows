==================== INSTALL TOOLCHAIN ====================
Based partially on the instructions from http://ascend4.org/Setting_up_a_MinGW-w64_build_environment
This procedure uses the standard 32-bit distribution of MinGW, and then installs a 64-bit compiler, which takes precedence when compiling.

Download the latest version of mingw-get: https://sourceforge.net/projects/mingw/files/latest/download

Change the MinGW installation to C:\MinGW\32 by creating a new folder within MinGW.
Deselect the graphical install.
When the install reaches 100% it is finished and you can press the quit button (the continue button remains grey).

Replace the contents of c:\mingw\32\var\lib\mingw-get\data\profile.xml with:

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<profile project="MinGW" application="mingw-get">
  <repository uri="http://prdownloads.sourceforge.net/mingw/%F.xml.lzma?download"/>
  <system-map id="default">
    <sysroot subsystem="mingw32" path="%R" />
    <sysroot subsystem="MSYS" path="%R/../msys" />
  </system-map>
</profile>

Open a windows command prompt and run the following:
c:\mingw\32\bin\mingw-get install msys-core msys-base msys-coreutils msys-openssh

Duplicate C:\MinGW\msys\etc\fstab.sample and save the copy as C:\MinGW\msys\etc\fstab
Edit C:\MinGW\msys\etc\fstab so that it reads:
#Win64_Path		     Mount_Point
c:/mingw/64		     /mingw

Download a precompiled mingw-w64 toolchain from http://tdm-gcc.tdragon.net/.
At the time of writing the latest version is http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%20Installer/tdm64-gcc-4.8.1-3.exe/download

Install “MinGW-w64/TDM64 (32-bit and 64-bit)” to C:\MinGW\64.
For the type of install, select “TDM-GCC Recommended, All Packages”, and be sure to select fortran (under the gcc tree).

Right click on My Computer -> Properties -> Advanced System Settings -> Advanced -> Environment variables. Remove C:\MinGW\64\bin from Path.

Create a shortcut to C:\MinGW\msys\msys.bat somewhere convenient. All following commands starting with a '$' are run from this shell.

Download Git/msysGit from http://code.google.com/p/msysgit/downloads/list
All installation options should be left as default.

==================== INSTALL DEPENDENCIES ====================

The home directory will be located in c:/mingw/msys/home/your_username where your_username is the name of your Windows user account.
Create a shortcut to this directory (referred to as ~ below) somewhere convenient.

Download cfitsio from
ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfit3350.zip

Compile with
$ ./configure --prefix=/usr/local
$ make
$ make install

Download libfltk 1.3.2 (or later) from www.fltk.org

Compile with
$ ./configure
$ make
$ make install

Download ds9 and XPA binaries from:
http://hea-www.harvard.edu/RD/ds9/download/windows/SAOImage%20DS9%207.2%20Install.exe
http://hea-www.harvard.edu/RD/ds9/download/windows/XPA%202.1.14%20Install.exe
and install to c:/ds9

To allow git and ds9 to be called from msys, create a file called .profile in ~ with the following contents:
export PATH=$PATH:/c/"Program Files (x86)"/Git/bin:/c/ds9

The settings will only be applied to new command windows, so close all open command windows to avoid confusion.

Download and install PICam from ftp://ftp.piacton.com/Public/Software/Official/PICam/

==================== BUILD PUOKO-NUI ====================

Clone a copy of the instrument control source from github and compile:

$ cd ~
$ git clone https://github.com/pchote/Puoko-nui.git puokonui
$ cd ~/puokonui
$ make CAMERA_TYPE=PICAM

Install the timer USB driver in Run ~/puokonui/ftd2xx/CDM20824_Setup.exe
Connect timer and use the device manager to find/set the virtual COM port ID.
Edit ~/puokonui/preference.dat and set:
TimerSerialPort: COM3 (use the COM port you found above)
MsysBashPath: C:/mingw/msys/bin/bash.exe
